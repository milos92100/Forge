#################### MySQL ###################
# Retrieve Foreign, Primary keys:

SELECT
  kcu.table_name AS TABLE_NAME,
  kcu.column_name AS COLUMN_NAME,
  kcu.constraint_name AS CONSTRAINT_NAME,
  kcu.referenced_table_name AS REFERENCED_TABLE_NAME,
  kcu.referenced_column_name AS REFERENCED_COLUMN_NAME
FROM information_schema.key_column_usage as kcu
WHERE
  kcu.table_name = 'TableName';

#################### \MySQL ##################

#################### PostgreSQL ###################
//retrieving all primary and foreign keys.

SELECT
    tc.constraint_name, tc.table_name, kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
FROM
    information_schema.table_constraints AS tc
    JOIN information_schema.key_column_usage AS kcu
      ON tc.constraint_name = kcu.constraint_name
    JOIN information_schema.constraint_column_usage AS ccu
      ON ccu.constraint_name = tc.constraint_name
WHERE constraint_type = 'FOREIGN KEY' OR constraint_type = 'PRIMARY KEY' AND tc.table_name='TableName';

#################### \PostgreSQL ##################

#################### MS SQL Server ##################
# Retrieve Foreign keys for given table

SELECT
    tab1.name AS TABLE_NAME,
    col1.name AS COLUMN_NAME,
    obj.name AS CONSTRAINT_NAME,
    tab2.name AS REFERENCED_TABLE_NAME,
    col2.name AS REFERENCED_COLUMN_NAME
FROM sys.foreign_key_columns fkc
INNER JOIN sys.objects obj
    ON obj.object_id = fkc.constraint_object_id
INNER JOIN sys.tables tab1
    ON tab1.object_id = fkc.parent_object_id
INNER JOIN sys.columns col1
    ON col1.column_id = parent_column_id AND col1.object_id = tab1.object_id
INNER JOIN sys.tables tab2
    ON tab2.object_id = fkc.referenced_object_id
INNER JOIN sys.columns col2
    ON col2.column_id = referenced_column_id AND col2.object_id = tab2.object_id
WHERE tab1.name = 'TableName'

# Retrieve Primary key for given table

SELECT
  tab.table_name AS TABLE_NAME,
  col.column_name AS COLUMN_NAME,
  constraint_type as CONSTRAINT_NAME
FROM
    information_schema.table_constraints tab,
    information_schema.constraint_column_usage col
WHERE
    col.constraint_name = tab.constraint_name
    AND col.table_name = tab.table_name
    AND constraint_type = 'PRIMARY KEY'
    AND col.table_name = 'TableName'

#################### \MS SQL Server ##################

#################### Oracle ##################

# Retrieve Foreign keys for given table
# NOTICE! Table name MUST be Uppercase

SELECT
    tab1.table_name AS TABLE_NAME,
    col1.column_name AS COLUMN_NAME,
    tab1.constraint_name AS CONSTRAINT_NAME,
    tab2.table_name REFERENCED_TABLE_NAME,
    col2.column_name REFERENCED_COLUMN_NAME

FROM user_constraints tab1
    LEFT JOIN user_cons_columns col1 ON col1.constraint_name = tab1.constraint_name
    LEFT JOIN user_constraints tab2 ON tab2.constraint_name = tab1.r_constraint_name
    LEFT JOIN user_cons_columns col2 ON col2.constraint_name = tab1.r_constraint_name

-- returns only foreign key constraints
WHERE tab1.constraint_type = 'R'
AND tab1.table_name = 'TABLE NAME'

#################### \Oracle ##################